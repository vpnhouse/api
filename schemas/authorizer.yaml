openapi: 3.0.3
info:
  title: AuthAPI
  version: '1.0'
  contact:
    name: Sergey Kovalev
    email: support@vpnhouse.net
  description: 'Authentication API'
paths:
  /api/client/signin:
    post:
      summary: Authenticate user
      operationId: authenticate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResp'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Authenticate user and provide access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            examples: {}
      tags:
        - auth
        - client
      security:
        - bearer: []
        - basic: []
    parameters: []
  /api/client/signup:
    post:
      deprecated: true
      summary: Register user
      operationId: register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResp'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Register user and provide access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            examples: {}
      tags:
        - register
        - client
      security:
        - bearer: []
        - basic: []
    parameters: []
  /api/client/token:
    post:
      summary: Refresh access token
      operationId: token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResp'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Refresh access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
            examples: {}
      tags:
        - token
        - client
      security:
        - bearer: []
    parameters: []
  /api/service/user:
    post:
      summary: Create user
      operationId: create-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Create user using specified credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
            examples: { }
      tags:
        - auth
        - service
      security:
        - ServiceKey: [ ]
    parameters: [ ]

  /api/client/send-restore-link:
    post:
      summary: Send restore link
      operationId: send-restore-link
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Send restore link to restore account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRestoreLinkRequest'
            examples: { }
      tags:
        - restore
    parameters: [ ]

  /api/client/send-confirmation-link:
    post:
      summary: Send confirmation link
      operationId: send-confirmation-link
      security:
        - bearer: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Send confirmation link for email confirmation
      tags:
        - confirmation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
    parameters: [ ]

  /api/client/send-pay-in-crypto:
    post:
      summary: Send pay in crypto offer
      operationId: send-pay-in-crypto
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Send email with offer to pay in crypto currencies
      tags:
        - crypto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPayInCryptoRequest'
    parameters: [ ]

  /api/client/confirm:
    get:
      parameters:
        - schema:
            type: string
            format: uuid
          name: confirmation_id
          in: query
          required: true
        - schema:
            type: string
          name: platform_type
          in: query
          required: false
        - schema:
            type: string
          name: project_id
          in: query
          required: true
      summary: Confirm email
      operationId: confirm
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResp'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Confirm email
      tags:
        - confirm
  /api/client/product:
    get:
      parameters:
        - schema:
            type: integer
          name: limit
          in: query
          required: true
        - schema:
            type: integer
          name: offset
          in: query
          required: true
        - schema:
            type: string
            format: uuid
          name: project_id
          in: query
          required: false
        - schema:
            type: string
          name: payment_type
          in: query
          required: false
      summary: List product
      tags:
        - list
        - product
      operationId: list-product
      description: Receive full list of products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/client/license-by-user:
    get:
      summary: List license by user_id
      tags:
        - list
        - license
      operationId: list-license-by-user
      description: List license by user_id
      security:
        - bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/License'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/client/pay:
    get:
      parameters:
        - schema:
            type: string
            format: uuid
          name: purchase_context_id
          in: query
          required: true
      summary: ""
      tags:
        - get
        - pay
      operationId: pay
      description: Redirect user to payment url hosted by other services
      security:
        - {}
      responses:
        '302':
          description: URI where the user can fulfill the payment by supplied purchase_context_id
          schema:
            type: string
            format: uri  # Optional - use if the Location header is an absolute URI, starting with http(s)://
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/client/payment-link:
    post:
      summary: ""
      tags:
        - get
        - payment-link
      operationId: payment-link
      description: Get payment link by supplied purchase_context_id
      security:
        - {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLinkResp'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLinkRequest'

  /api/client/payment-details:
    post:
      summary: Get payment details
      tags:
        - get
        - payment-details
      operationId: payment-details
      description: Get payment details
      security:
        - {}
        - bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailsResp'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentDetailsRequest'

  /api/client/subscriptions:
    get:
      summary: Get user active subscriptions
      tags:
        - get
        - subscriptions
      operationId: subscriptions
      description: Get user active subscriptions
      security:
        - bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionResp'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/client/apply-trial-license:
    post:
      summary: Apply trial license
      tags:
        - trial
        - license
      operationId: apply-trial-license
      description: Apply trial license
      security:
        - {}
        - bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyTrialLicenseRequest'

  /api/client/create-purchase-context:
    post:
      summary: Create purchase context
      tags:
        - create
        - purchase-context
      operationId: create-purchase-context
      description: Create new purchase context
      security:
        - {}
        - bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePurchaseContextResp'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePurchaseContextRequest'

  /api/client/process-android-purchase:
    post:
      summary: Process android purchase
      tags:
        - process
        - android-purchase
      operationId: process-android-purchase
      description: Process android purchase
      security:
        - {}
        - bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResp'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessAndroidPurchaseRequest'

  /api/client/process-ios-purchase:
    post:
      summary: Process ios purchase
      tags:
        - process
        - ios-purchase
      operationId: process-ios-purchase
      description: Process ios purchase
      security:
        - { }
        - bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResp'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessIOSPurchaseRequest'

  /api/client/apple-server-notifications:
    post:
      summary: Apple server notifications
      tags:
        - apple
        - server
        - notifications
      operationId: apple-server-notifications
      description: Apple server notifications
      security:
        - {}
      responses:
        '200':
          description: OK
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppleServerNotificationsRequest'

  /api/client/firebase-public-key:
    get:
      deprecated: true
      parameters:
        - schema:
            type: string
            format: uuid
          name: project_id
          in: query
      summary: Get firebase public key by project id or default
      tags:
        - get
        - firebase
        - key
      operationId: get-firebase-public-key
      description: Get firebase public key by project id or default
      security:
        - bearer: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/client/provider-public-info:
    get:
      parameters:
        - name: provider_id
          schema:
            type: string
          in: query
          required: true
      summary: Get authentication provider public info
      tags:
        - get
        - provider
        - public
        - info
      operationId: get-provider-public-info
      description: Get authentication provider public info
      security:
        - bearer: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/client/delete:
    delete:
      summary: Delete user
      tags:
        - delete
        - user
      operationId: delete-user
      description: Delete user
      security:
        - bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  request_id:
                    type: string
                    format: uuid
                    example: '0a00be16-1ccc-450d-94da-0671cca627bf'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/client/purge-user:
    post:
      summary: Purge a specific user by id
      tags:
        - delete
        - by-id
        - user
      operationId: purge-user
      description: Purge the user and all user data from system by userID
      security:
        - bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeUserRequest'
      responses:
        '200':
          description: OK
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/client/crashlog:
    post:
      summary: Send crash log
      tags:
        - crash
        - log
      operationId: send-crash-log
      description: Send crash log
      security:
        - {}
        - bearer: [ ]
      responses:
        '200':
          description: OK
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrashLogRequest'

  /api/admin/list-licenses-by-email:
    post:
      summary: List licenses by email
      tags:
        - list
        - licenses
        - email
      operationId: list-licenses-by-email
      description: List licenses by email
      security:
        - AdminKey: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicensesByEmailRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/License'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

components:
  schemas:
    AuthRequest:
      type: object
      title: AuthRequest
      x-examples:
        example-paid:
          value:
            project: 416d6d45-236b-4b39-a221-ed99abc7a4ff
            platform_type: windows
            client_version: 1.0.1
            device_id: f7df7c7a-3569-401c-b612-f49b775bb19e
            installation_id: f7df7c7a-3569-401c-b612-f49b775bb19e
            auth_type: 1744c06e-846b-4212-8154-118760bc9387
            auth_info: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        example-anonymus:
          value:
            project: 416d6d45-236b-4b39-a221-ed99abc7a4ff
            platform_type: windows
            client_version: 1.0.1
            device_id: f7df7c7a-3569-401c-b612-f49b775bb19e
            installation_id: f7df7c7a-3569-401c-b612-f49b775bb19e
            auth_type: 7e4cfc26-da82-4f04-aaa0-00d03f9de58f
            auth_info: d269c0c4-288e-44d5-b719-ffd9096aa6ff
      properties:
        project:
          type: string
          example: 416d6d45-236b-4b39-a221-ed99abc7a4ff
        platform_type:
          type: string
          example: android
        client_version:
          type: string
          example: 1.0.1
        device_id:
          type: string
          example: f7df7c7a-3569-401c-b612-f49b775bb19e
          format: uuid
        installation_id:
          type: string
          example: f7df7c7a-3569-401c-b612-f49b775bb19e
          format: uuid
        auth_type:
          deprecated: true
          type: string
          example: 1744c06e-846b-4212-8154-118760bc9387
        auth_method_id:
          type: string
          example: 7e4cfc26-da82-4f04-aaa0-00d03f9de58f
        auth_info:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      required:
        - project
        - platform_type
        - client_version
        - device_id
        - installation_id
        - auth_info
      writeOnly: true
    AuthServiceRequest:
      type: object
      title: AuthServiceRequest
      x-examples:
        example:
          value:
            project: 416d6d45-236b-4b39-a221-ed99abc7a4ff
            service_id: TestService
      properties:
        project:
          type: string
          example: 416d6d45-236b-4b39-a221-ed99abc7a4ff
        service_id:
          type: string
          example: TestService
      required:
        - project
        - service_id
      writeOnly: true
    AuthResp:
      title: AuthResp
      type: object
      x-examples:
        example-paid:
          value:
            access_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ2cG4tbm9kZSIsImV4cCI6MTYyNDk0OTk0NywianRpIjoiNTUxNzYyODQtZDdkZS0xMWViLWE2NDUtMDI0MmFjMTIwMDAyIiwiaWF0IjoxNjI0ODYzNTQ3LCJpc3MiOiJUZXN0UHJvamVjdC1BdXRoLTEtMiIsIm5iZiI6MTYyNDg2MzU0Nywic3ViIjoiRmVuZFZQTlRlc3RQcm9qZWN0L2ZpcmViYXNlL0pvaG5Eb2UifQ.REIfc3DB4e4pU7GyNU7vmJfsJBDu-0PLghV06KIdEM0Vhg4jVFA4MzgRU_j151PrAalSrpj0gLJGW8qZfqSLyDshRQCjgKYEt_X5PmNVkFmAjUz6hwCBJ8tMRxfhG2vcG1WZF80aTLLx6LQ0NwGT6hfAYEemzAecVwvnTuE1BQow3c1T71uZSByLDP1WAa0ZYnNZjceOGeikSXK5RtHogSyZkud7zfi_dKhDzW8Pgd_06HYEmexogv3LMpbJ0NY0nrRnxqPlJ1-uqQ6OIktQe1RvLe7BTGBthp_wrAv3Z9YdGSzJrlJhr1hg6qTzzdo0UHdvCpMeIun8bpr7OWVEIg
            refresh_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZWZyZXNoIiwiZXhwIjoxNjMwMTMzOTQ3LCJqdGkiOiI1NTE3NjI4NC1kN2RlLTExZWItYTY0NS0wMjQyYWMxMjAwMDIiLCJpYXQiOjE2MjQ4NjM1NDcsImlzcyI6IlRlc3RQcm9qZWN0LUF1dGgtMS0yIiwibmJmIjoxNjI0ODYzNTQ3LCJzdWIiOiJGZW5kVlBOVGVzdFByb2plY3QvZmlyZWJhc2UvSm9obkRvZSJ9.GbhbrSxLcoj7yJFQnh1Pq2_3OXMnffihRaRyOsHay8RLyZzwHTpHN_uEcT-5z7l_kbrcWWMuswChrnt6zYuzzMa_qPFXpSIwkf3xXrFOr4Og-wLQqsy6Uh7-hJB546mMt-bT7tCFXZbNRtCm_lzIW6mPAcIJtofJsqSPaFL-xWrJEl0m4vRNV4NusGwlCuE7uvjQPLUF5gS98QLLWNWyHipVWxjSEK57I0ngrsOU7b4jETHxtgYYQ_O2S5GoOUe0YrwYFkrKP1LB3eE_aAw-toOJSP6eVm_Y345MBVJj8NcGa3Kbdm5SzZhHs2P-ZoKc8Yp2FdiFPyCq6VDmQ2PyXw
            discovery_address:
              - 'https://discovery.project.io/api/client/locations'
        example-anonymous:
          value:
            access_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ2cG4tbm9kZSIsImV4cCI6MTYyNDk0OTk0NywianRpIjoiNTUxNzYyODQtZDdkZS0xMWViLWE2NDUtMDI0MmFjMTIwMDAyIiwiaWF0IjoxNjI0ODYzNTQ3LCJpc3MiOiJUZXN0UHJvamVjdC1BdXRoLTEtMiIsIm5iZiI6MTYyNDg2MzU0Nywic3ViIjoiRmVuZFZQTlRlc3RQcm9qZWN0L2Fub255bW91cy9kMjY5YzBjNC0yODhlLTQ0ZDUtYjcxOS1mZmQ5MDk2YWE2ZmYifQ.iTcsdx200Lv_tzqBjO5xdEQ6iPDQj0_Uqo-b1BdlcZGVPsXN_HmtAu-pKK5SrkYjGAsmnhF_4dxFeZnYmtYgsfbjDdqalejwsAJWWdYN1rPHoAncuLE4bgy7FKH-ugHlGaPVdlN1HT-ASdu4Z8aVVQOJSG66NmMmyW7YmmxfXD8VqMxoBZZneRu2PlVdRHxEIWmWihvSwdUW_rjw9nbIecidYftGI5FEivYkM9yR74iU3WeXG2zr_peqlfREuTGPCBb_bA2v45SVUS1f_gVEiokpRfYlX3W129DS0gpnz0fLddSFDwt2hNY8MyGKEnhwxPCBQNWgyJnqVo29J4rmhQ
            refresh_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZWZyZXNoIiwiZXhwIjoxNjMwMTMzOTQ3LCJqdGkiOiI1NTE3NjI4NC1kN2RlLTExZWItYTY0NS0wMjQyYWMxMjAwMDIiLCJpYXQiOjE2MjQ4NjM1NDcsImlzcyI6IlRlc3RQcm9qZWN0LUF1dGgtMS0yIiwibmJmIjoxNjI0ODYzNTQ3LCJzdWIiOiJGZW5kVlBOVGVzdFByb2plY3QvYW5vbnltb3VzL2QyNjljMGM0LTI4OGUtNDRkNS1iNzE5LWZmZDkwOTZhYTZmZiJ9.grtYMQCqGy7xDFnrJLYMYNJhCKNwTLhgab_bM6Kz12aNq9ZPBq44nB9YHI0pyj3OJ6eHCM9Ze5aBJh7LOyIQMLFS20g2YwBbGUEWO3rpuubQ5UE0o_fI8zRFNzkSkSbroR-xTgqQoteznfSH1I824K4FWgthGws-r8lwrix3ZjBVGzqzOAnnP6NtKg8nI3FMppSyas2fCBm92ojpE6EUkOK5KhwTXKIuwx9X7YebtDVLxyi1NfGpDESzCitvjTnvy65HCcvZNGnHT03VXdto-CtrkzM628FIljKR-RN_TbPjK-SXK5O52Z7u0jkEmtKrn4zzIjfXF1zGCMkPqxAjZw
            discovery_address:
              - 'https://discovery-free.project.io/api/client/locations'
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ2cG4tbm9kZSIsImV4cCI6MTYyNDk0OTk0NywianRpIjoiNTUxNzYyODQtZDdkZS0xMWViLWE2NDUtMDI0MmFjMTIwMDAyIiwiaWF0IjoxNjI0ODYzNTQ3LCJpc3MiOiJUZXN0UHJvamVjdC1BdXRoLTEtMiIsIm5iZiI6MTYyNDg2MzU0Nywic3ViIjoiRmVuZFZQTlRlc3RQcm9qZWN0L2ZpcmViYXNlL0pvaG5Eb2UifQ.REIfc3DB4e4pU7GyNU7vmJfsJBDu-0PLghV06KIdEM0Vhg4jVFA4MzgRU_j151PrAalSrpj0gLJGW8qZfqSLyDshRQCjgKYEt_X5PmNVkFmAjUz6hwCBJ8tMRxfhG2vcG1WZF80aTLLx6LQ0NwGT6hfAYEemzAecVwvnTuE1BQow3c1T71uZSByLDP1WAa0ZYnNZjceOGeikSXK5RtHogSyZkud7zfi_dKhDzW8Pgd_06HYEmexogv3LMpbJ0NY0nrRnxqPlJ1-uqQ6OIktQe1RvLe7BTGBthp_wrAv3Z9YdGSzJrlJhr1hg6qTzzdo0UHdvCpMeIun8bpr7OWVEIg
        refresh_token:
          type: string
          example: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZWZyZXNoIiwiZXhwIjoxNjMwMTMzOTQ3LCJqdGkiOiI1NTE3NjI4NC1kN2RlLTExZWItYTY0NS0wMjQyYWMxMjAwMDIiLCJpYXQiOjE2MjQ4NjM1NDcsImlzcyI6IlRlc3RQcm9qZWN0LUF1dGgtMS0yIiwibmJmIjoxNjI0ODYzNTQ3LCJzdWIiOiJGZW5kVlBOVGVzdFByb2plY3QvZmlyZWJhc2UvSm9obkRvZSJ9.GbhbrSxLcoj7yJFQnh1Pq2_3OXMnffihRaRyOsHay8RLyZzwHTpHN_uEcT-5z7l_kbrcWWMuswChrnt6zYuzzMa_qPFXpSIwkf3xXrFOr4Og-wLQqsy6Uh7-hJB546mMt-bT7tCFXZbNRtCm_lzIW6mPAcIJtofJsqSPaFL-xWrJEl0m4vRNV4NusGwlCuE7uvjQPLUF5gS98QLLWNWyHipVWxjSEK57I0ngrsOU7b4jETHxtgYYQ_O2S5GoOUe0YrwYFkrKP1LB3eE_aAw-toOJSP6eVm_Y345MBVJj8NcGa3Kbdm5SzZhHs2P-ZoKc8Yp2FdiFPyCq6VDmQ2PyXw
        discovery_addresses:
          type: array
          items:
            type: string
            format: uri
            example: 'https://discovery.project.io/api/client/locations'
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        entitlements:
          type: object
        client_features:
          type: object
        email:
          type: string
        daily_limit:
          type: integer
          format: int64
      required:
        - access_token
    TokenRequest:
      title: TokenRequest
      type: object
      properties:
        installation_id:
          type: string
          format: uuid
        platform_type:
          type: string
        refresh_token:
          type: string
      required:
        - installation_id
        - platform_type
        - refresh_token
    TokenResp:
      title: TokenResp
      type: object
      properties:
        access_token:
          type: string
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        entitlements:
          type: object
        client_features:
          type: object
        email:
          type: string
        discovery_addresses:
          type: array
          items:
            type: string
            format: uri
      required:
        - access_token
        - created_at
        - expires_at
        - entitlements
    SendRestoreLinkRequest:
      title: SendRestoreLinkRequest
      type: object
      properties:
        email:
          type: string
        project_id:
          type: string
          format: uuid
      required:
        - email
        - project_id
    CreateUserRequest:
      title: CreateUserRequest
      type: object
      properties:
        project_id:
          type: string
          format: uuid
        auth_method_id:
          type: string
          format: uuid
        email:
          type: string
        password:
          type: string
        email_confirmed:
          type: boolean
      required:
        - project_id
        - email
        - password
        - email_confirmed
    User:
      title: User
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_id:
          type: string
          format: uuid
        auth_method_id:
          type: string
          format: uuid
        provider_id:
          type: string
        email:
          type: string
        description:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - project_id
        - provider_id
        - email
        - created_at
        - updated_at
    Product:
      title: Product
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        license_type:
          type: string
        payment_json:
          type: object
        period:
          type: string
        labels_json:
          $ref: 'common.yaml#/components/schemas/LabelsJson'
        amount:
          type: integer
          format: int64
          description: The currency amount in cents ($19.99)
          example: 1999
        currency:
          type: string
          description: The currency code (ISO 4217)
          example: USD
    License:
      title: License
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        selector_json:
          type: object
        entitlements_json:
          type: object
        available_platforms:
          type: array
          items:
              type: string
          example: [ "windows", "android", "ios" ]
        labels_json:
          $ref: 'common.yaml#/components/schemas/LabelsJson'
        period:
          type: string
          example: "p1y"
    PaymentDetailsRequest:
      title: PaymentDetailsRequest
      type: object
      properties:
        email:
          type: string
        project_id:
          type: string
          format: uuid
        product_id:
          type: string
          format: uuid
        ga_id:
          type: string
          maxLength: 32
        installation_id:
          type: string
          format: uuid
      required:
        - email
        - project_id
        - product_id
    PaymentDetailsResp:
      title: PaymentDetailsResp
      type: object
      properties:
        payment_url:
          type: string
      required:
        - payment_url
    SubscriptionResp:
      title: SubscriptionResp
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        tariff:
          type: string
        renew_at:
          type: string
          format: date-time
        entitlements_json:
          type: object
      required:
        - id
        - name
        - tariff
        - renew_at
        - entitlements_json
    PaymentLinkRequest:
      title: PaymentLinkRequest
      type: object
      properties:
        purchase_context_id:
          type: string
          format: uuid
      required:
        - purchase_context_id
    PaymentLinkResp:
      title: PaymentLinkResp
      type: object
      properties:
        payment_url:
          type: string
      required:
        - payment_url
    CreatePurchaseContextRequest:
      title: CreatePurchaseContextRequest
      type: object
      properties:
        project_id:
          type: string
          format: uuid
        product_id:
          type: string
          format: uuid
        email:
          type: string
          format: uuid
      required:
        - project_id
        - product_id
        - email
    CreatePurchaseContextResp:
      title: CreatePurchaseContextResp
      type: object
      properties:
        purchase_context_id:
          type: string
          format: uuid
      required:
        - purchase_context_id
    ProcessAndroidPurchaseRequest:
      title: ProcessAndroidPurchaseRequest
      type: object
      properties:
        purchase:
          type: string
        signature:
          type: string
      required:
          - purchase
          - signature
    ProcessIOSPurchaseRequest:
        title: ProcessIOSPurchaseRequest
        type: object
        properties:
          jws_receipt:
            type: string
        required:
            - jws_receipt
    AppleServerNotificationsRequest:
        title: AppleServerNotificationsRequest
        type: object
        properties:
          signedPayload:
            type: string
        required:
            - signedPayload
    ApplyTrialLicenseRequest:
      title: ApplyTrialLicenseRequest
      type: object
      properties:
        product_id:
          type: string
          format: uuid
      required:
        - product_id
    PurgeUserRequest:
      title: PurgeUserRequest
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        project_id:
          type: string
          format: uuid
        api_key:
          type: string
      required:
        - user_id
        - project_id
        - api_key
    CrashLogRequest:
      title: CrashLogRequest
      type: object
      properties:
        log_msg:
          type: string
          description: Base64 encoded crash log JSON message
      required:
          - log_msg
    ListLicensesByEmailRequest:
      title: ListLicensesByEmailRequest
      type: object
      properties:
        email:
          type: string
        project_id:
          type: string
          format: uuid
      required:
          - email
          - project_id
    SendPayInCryptoRequest:
      title: SendPayInCryptoRequest
      type: object
      properties:
        email:
          type: string
        project_id:
          type: string
          format: uuid
      required:
          - email
          - project_id

  securitySchemes:
    bearer:
      type: http
      scheme: bearer
    basic:
      type: http
      scheme: basic
    ServiceKey:
      name: X-VPNHOUSE-SERVICE-KEY
      type: apiKey
      in: header
    AdminKey:
      name: X-PROJECT-ADMIN-KEY
      type: apiKey
      in: header
tags:
  - name: auth
  - name: client
